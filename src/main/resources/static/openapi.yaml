openapi: 3.0.0
info:
  title: Event Scheduler API
  description: REST API for scheduling events, including conflict checks and event retrieval.
  version: "0.0.1"
servers:
  - url: http://localhost:8080
paths:
  /events:
    get:
      summary: Retrieve all events or filter by time range
      description: Retrieves a list of all events. Supports optional filtering by a time range using `startTime` and `endTime` query parameters.
      parameters:
        - in: query
          name: startTime
          schema:
            type: string
            format: date-time
          required: false
          description: The start of the time range to filter events.
            Required if `endTime` is provided.
        - in: query
          name: endTime
          schema:
            type: string
            format: date-time
          required: false
          description: The end of the time range to filter events.
            Required if `startTime` is provided.
      responses:
        "200":
          description: A list of events (filtered or unfiltered).
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
        "400":
          description: Invalid query parameters (e.g., `startTime` is after `endTime`).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /events/{id}:
    get:
      summary: Retrieve event details by ID
      description: Retrieves details of a specific event by ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the event.
      responses:
        "200":
          description: Event details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        "400":
          description: Invalid ID supplied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Event not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      summary: Create a new event
      description: Creates a new event. Ensures no time conflicts with existing events.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventInput'
      responses:
        "201":
          description: Event created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
              example:
                id: 12345
                name: "Team Meeting"
                startTime: "2023-11-21T10:00:00Z"
                endTime: "2023-11-21T11:00:00Z"
        "400":
          description: Invalid input or overlapping event conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    Event:
      type: object
      required:
        - id
        - name
        - startTime
        - endTime
      properties:
        id:
          type: integer
          description: Unique identifier for the event.
          example: 1
        name:
          type: string
          description: Name of the event.
          example: "Team Meeting"
        startTime:
          type: string
          format: date-time
          description: Start time of the event (ISO 8601 format).
          example: "2023-11-21T10:00:00Z"
        endTime:
          type: string
          format: date-time
          description: End time of the event (ISO 8601 format).
          example: "2023-11-21T11:00:00Z"
    EventInput:
      type: object
      required:
        - name
        - startTime
        - endTime
      properties:
        name:
          type: string
          description: Name of the event.
          maxLength: 255
          minLength: 1
        startTime:
          type: string
          format: date-time
          description: Start time of the event, must be before endTime.
          example: "2023-11-21T10:00:00Z"
        endTime:
          type: string
          format: date-time
          description: End time of the event, must be after startTime.
          example: "2023-11-21T10:00:00Z"
    ErrorResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        status:
          type: integer
        error:
          type: string
        message:
          type: string
        path:
          type: string
